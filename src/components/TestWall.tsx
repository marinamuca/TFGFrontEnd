/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 testWallC.glb -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three'



type GLTFResult = GLTF & {
  nodes: {
    Pared: THREE.Mesh
    Cuadro: THREE.Mesh
  }
  materials: {
    MaterialPared: THREE.MeshStandardMaterial
    MaterialCuadro: THREE.MeshStandardMaterial
  }
}

export function TestWall(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/testWallC.glb') as GLTFResult
  const colorMap = useLoader(TextureLoader, '/PavingStones092_1K_Color.jpeg')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Pared.geometry} material={materials.MaterialPared} rotation={[-Math.PI, 0, 0]} scale={[-0.199, -1, -1]} />
      <mesh geometry={nodes.Cuadro.geometry} material={materials.MaterialCuadro} position={[0.19, 0, 0]} rotation={[-Math.PI, 0, 0]} scale={[-0.058, -0.308, -0.609]}>
        {/* <meshStandardMaterial map={colorMap}/> */}
      </mesh>
    </group>
  )
}

useGLTF.preload('/testWallC.glb')
