/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 ../../public/models/WallRounded.glb -t
*/

import * as THREE from 'three'
import React, { useState} from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Pared: THREE.Mesh
    Suelo: THREE.Mesh
  }
  materials: {
    MaterialPared: THREE.MeshStandardMaterial
    MaterialSuelo: THREE.MeshStandardMaterial
  }
}

export function Wall(props: JSX.IntrinsicElements['group']) {
  let gltfRoutes = {
    rounded: '/models/WallRounded.glb',
    sharp: '/models/WallSharp.glb'
  }
  const [gltfRoute, setGltfRoute]= useState(gltfRoutes.rounded)
  const { nodes, materials } = useGLTF(gltfRoute) as GLTFResult
  return (
    <group {...props} dispose={null} onClick={(e) => setGltfRoute(gltfRoutes.sharp)}>
      <mesh geometry={nodes.Pared.geometry} material={materials.MaterialPared} position={[0, 1.3, 0]} />
      <mesh geometry={nodes.Suelo.geometry} material={materials.MaterialSuelo} position={[0, 1.3, 0]} />
    </group>
  )
}

useGLTF.preload('/models/WallRounded.glb')
